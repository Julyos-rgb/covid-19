{"remainingRequest":"E:\\疫情防控\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\疫情防控\\vue_epidemic\\src\\components\\menu\\Teacher.vue?vue&type=template&id=47ba5e22&scoped=true&","dependencies":[{"path":"E:\\疫情防控\\vue_epidemic\\src\\components\\menu\\Teacher.vue","mtime":1620538518000},{"path":"E:\\疫情防控\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\疫情防控\\vue_epidemic\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\疫情防控\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\疫情防控\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}